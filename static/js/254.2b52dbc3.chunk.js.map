{"version":3,"file":"static/js/254.2b52dbc3.chunk.js","mappings":"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","sources":["components/ContactListItem/ContactListItem.styled.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","img/logo.svg","components/Spinner/Spinner.styled.jsx","components/Spinner/Spinner.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","Pages/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ListItem = styled.li`\n  margin-top: 30px;\n  margin-left: 30px;\n  flex-basis: calc(100% / 4 - 30px);\n\n  button {\n    display: block;\n    min-width: 80px;\n    cursor: pointer;\n    :hover {\n      color: white;\n      background-color: orangered;\n    }\n  }\n`;\n","import { useDeleteContactMutation } from '../../redux/contacts/contactSlice';\n\nimport { ListItem } from './ContactListItem.styled';\n\nexport const ContactListItem = ({ id, name, number }) => {\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n\n  return (\n    <ListItem>\n      &#9742; {name}: {number};\n      {isDeleting ? (\n        <p>Deleting...</p>\n      ) : (\n        <button type=\"button\" onClick={() => deleteContact(id)}>\n          Delete\n        </button>\n      )}\n    </ListItem>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  margin-top: -30px;\n  margin-left: -30px;\n`;\n","import { ContactListItem } from '../ContactListItem/ContactListItem';\nimport { List } from './ContactList.styled';\nimport PropTypes from 'prop-types';\n\nexport const ContactList = ({ filter, contacts }) => {\n  const normalizedFilter = filter.toLowerCase();\n  const findContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n\n  return (\n    <List>\n      {findContacts.map(({ id, name, phone }) => (\n        <ContactListItem key={id} id={id} name={name} number={phone} />\n      ))}\n    </List>\n  );\n};\n\nContactList.propTypes = {\n  filter: PropTypes.string,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: block;\n  margin-bottom: 15px;\n  color: orangered;\n  border-bottom: 1px solid green;\n\n  input {\n    margin-left: 20px;\n    width: 250px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Label } from './Filter.styled';\n\nexport const Filter = ({ filter, handleChange }) => {\n  return (\n    <Label>\n      Find contacts by name\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={handleChange}\n        placeholder=\"contact name\"\n      />\n    </Label>\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  handleChange: PropTypes.func,\n};\n","var _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgLogo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 841.9 595.3\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    fill: \"#61DAFB\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M666.3 296.5c0-32.5-40.7-63.3-103.1-82.4 14.4-63.6 8-114.2-20.2-130.4-6.5-3.8-14.1-5.6-22.4-5.6v22.3c4.6 0 8.3.9 11.4 2.6 13.6 7.8 19.5 37.5 14.9 75.7-1.1 9.4-2.9 19.3-5.1 29.4-19.6-4.8-41-8.5-63.5-10.9-13.5-18.5-27.5-35.3-41.6-50 32.6-30.3 63.2-46.9 84-46.9V78c-27.5 0-63.5 19.6-99.9 53.6-36.4-33.8-72.4-53.2-99.9-53.2v22.3c20.7 0 51.4 16.5 84 46.6-14 14.7-28 31.4-41.3 49.9-22.6 2.4-44 6.1-63.6 11-2.3-10-4-19.7-5.2-29-4.7-38.2 1.1-67.9 14.6-75.8 3-1.8 6.9-2.6 11.5-2.6V78.5c-8.4 0-16 1.8-22.6 5.6-28.1 16.2-34.4 66.7-19.9 130.1-62.2 19.2-102.7 49.9-102.7 82.3 0 32.5 40.7 63.3 103.1 82.4-14.4 63.6-8 114.2 20.2 130.4 6.5 3.8 14.1 5.6 22.5 5.6 27.5 0 63.5-19.6 99.9-53.6 36.4 33.8 72.4 53.2 99.9 53.2 8.4 0 16-1.8 22.6-5.6 28.1-16.2 34.4-66.7 19.9-130.1 62-19.1 102.5-49.9 102.5-82.3zm-130.2-66.7c-3.7 12.9-8.3 26.2-13.5 39.5-4.1-8-8.4-16-13.1-24-4.6-8-9.5-15.8-14.4-23.4 14.2 2.1 27.9 4.7 41 7.9zm-45.8 106.5c-7.8 13.5-15.8 26.3-24.1 38.2-14.9 1.3-30 2-45.2 2-15.1 0-30.2-.7-45-1.9-8.3-11.9-16.4-24.6-24.2-38-7.6-13.1-14.5-26.4-20.8-39.8 6.2-13.4 13.2-26.8 20.7-39.9 7.8-13.5 15.8-26.3 24.1-38.2 14.9-1.3 30-2 45.2-2 15.1 0 30.2.7 45 1.9 8.3 11.9 16.4 24.6 24.2 38 7.6 13.1 14.5 26.4 20.8 39.8-6.3 13.4-13.2 26.8-20.7 39.9zm32.3-13c5.4 13.4 10 26.8 13.8 39.8-13.1 3.2-26.9 5.9-41.2 8 4.9-7.7 9.8-15.6 14.4-23.7 4.6-8 8.9-16.1 13-24.1zM421.2 430c-9.3-9.6-18.6-20.3-27.8-32 9 .4 18.2.7 27.5.7 9.4 0 18.7-.2 27.8-.7-9 11.7-18.3 22.4-27.5 32zm-74.4-58.9c-14.2-2.1-27.9-4.7-41-7.9 3.7-12.9 8.3-26.2 13.5-39.5 4.1 8 8.4 16 13.1 24 4.7 8 9.5 15.8 14.4 23.4zM420.7 163c9.3 9.6 18.6 20.3 27.8 32-9-.4-18.2-.7-27.5-.7-9.4 0-18.7.2-27.8.7 9-11.7 18.3-22.4 27.5-32zm-74 58.9c-4.9 7.7-9.8 15.6-14.4 23.7-4.6 8-8.9 16-13 24-5.4-13.4-10-26.8-13.8-39.8 13.1-3.1 26.9-5.8 41.2-7.9zm-90.5 125.2c-35.4-15.1-58.3-34.9-58.3-50.6 0-15.7 22.9-35.6 58.3-50.6 8.6-3.7 18-7 27.7-10.1 5.7 19.6 13.2 40 22.5 60.9-9.2 20.8-16.6 41.1-22.2 60.6-9.9-3.1-19.3-6.5-28-10.2zM310 490c-13.6-7.8-19.5-37.5-14.9-75.7 1.1-9.4 2.9-19.3 5.1-29.4 19.6 4.8 41 8.5 63.5 10.9 13.5 18.5 27.5 35.3 41.6 50-32.6 30.3-63.2 46.9-84 46.9-4.5-.1-8.3-1-11.3-2.7zm237.2-76.2c4.7 38.2-1.1 67.9-14.6 75.8-3 1.8-6.9 2.6-11.5 2.6-20.7 0-51.4-16.5-84-46.6 14-14.7 28-31.4 41.3-49.9 22.6-2.4 44-6.1 63.6-11 2.3 10.1 4.1 19.8 5.2 29.1zm38.5-66.7c-8.6 3.7-18 7-27.7 10.1-5.7-19.6-13.2-40-22.5-60.9 9.2-20.8 16.6-41.1 22.2-60.6 9.9 3.1 19.3 6.5 28.1 10.2 35.4 15.1 58.3 34.9 58.3 50.6-.1 15.7-23 35.6-58.4 50.6zM320.8 78.4z\"\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 420.9,\n    cy: 296.5,\n    r: 45.7\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M520.5 78.1z\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogo);\nexport default __webpack_public_path__ + \"static/media/logo.6ce24c58023cc2f8fd88fe9d219db6c6.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\n\nexport const Logo = styled.img`\n  height: 20vmin;\n  pointer-events: none;\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  z-index: 99;\n\n  animation: logo-spin infinite 3s linear;\n\n  @keyframes logo-spin {\n    from {\n      transform: rotate(0deg);\n    }\n    to {\n      transform: rotate(360deg);\n    }\n  }\n`;\n","import logo from '../../img/logo.svg';\nimport { Logo } from './Spinner.styled';\n\nexport function Spinner() {\n  return (\n    <div>\n      <Logo src={logo} alt=\"logo\" />\n    </div>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  width: 450px;\n  flex-direction: column;\n  align-items: flex-start;\n  padding: 8px;\n  margin-bottom: 15px;\n  margin-left: auto;\n  margin-right: auto;\n  border: 1px solid green;\n\n  label {\n    width: 350px;\n    padding: 5px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 20px;\n    font-size: 20px;\n    font-weight: 500;\n    border-left: 2px solid green;\n  }\n\n  button {\n    cursor: pointer;\n    margin: 0 auto;\n    :hover {\n      background-color: blue;\n      color: #fff;\n    }\n  }\n`;\n","import { useState } from 'react';\nimport { useAddContactMutation } from '../../redux/contacts/contactSlice';\nimport PropTypes from 'prop-types';\nimport { Spinner } from '../Spinner/Spinner';\nimport toast from 'react-hot-toast';\nimport { Form } from './ContactForm.styled';\n\nexport const ContactForm = ({ contacts }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [createContact, { isLoading, isError }] = useAddContactMutation();\n\n  const resetInput = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleChange = e => {\n    switch (e.target.name) {\n      case 'name':\n        setName(e.target.value);\n        break;\n\n      case 'number':\n        setNumber(e.target.value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const newContact = {\n      name,\n      number,\n    };\n\n    const isExistContact = contacts.find(\n      contact =>\n        contact.name.toLocaleLowerCase() === newContact.name.toLocaleLowerCase()\n    );\n\n    if (isExistContact) {\n      toast.error(`${newContact.name} is already in contacts`);\n    } else {\n      createContact(newContact);\n      toast.success('Successfully added!');\n      resetInput();\n    }\n  };\n\n  return (\n    <Form onSubmit={handleSubmit} autoComplete=\"off\">\n      {isLoading && <Spinner />}\n      <label>\n        Name &#8594;\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          placeholder=\"contact name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label>\n        Number &#8594;\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          placeholder=\"contact number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n\n      <button type=\"submit\">Add contact</button>\n      {isError && <p>Error adding contact</p>}\n      <></>\n    </Form>\n  );\n};\n\nContactForm.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import { useState } from 'react';\nimport { useFetchContactsQuery } from '../redux/contacts/contactSlice';\nimport { ContactList } from '../components/ContactList/ContactList';\nimport { Filter } from '../components/Filter/Filter';\nimport { ContactForm } from '../components/ContactForm/ContactForm';\nimport { Spinner } from '../components/Spinner/Spinner';\nimport phoneImage from '../img/teletown.png';\n\nconst styles = {\n  section: {\n    backgroundImage: `url(${phoneImage})`,\n    backgroundSize: '300px',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: '80px 35px',\n    padding: '20px',\n  },\n  h1: {\n    marginBottom: '20px',\n    textAlign: 'center',\n    color: 'blue',\n    fontSize: '50px',\n  },\n  h2: {\n    textAlign: 'center',\n    color: 'green',\n    fontSize: '40px',\n  },\n  p: { textAlign: 'center' },\n};\n\nexport function ContactsPage() {\n  const [filter, setFilter] = useState('');\n  const {\n    data: contacts,\n    isError,\n    isFetching,\n  } = useFetchContactsQuery(undefined, { refetchOnMountOrArgChange: true });\n\n  const handleChange = e => {\n    setFilter(e.target.value);\n  };\n\n  return (\n    <section style={styles.section}>\n      <h1 style={styles.h1}>Phonebook</h1>\n      <ContactForm contacts={contacts} />\n      <div>\n        {contacts?.length !== 0 ? (\n          <>\n            <h2 style={styles.h2}>Contacts</h2>\n            <Filter value={filter} handleChange={handleChange} />\n          </>\n        ) : (\n          <p style={styles.p}>No saved contacts</p>\n        )}\n\n        {isFetching && <Spinner />}\n        {isError && <p>Something wrong</p>}\n        {contacts && <ContactList filter={filter} contacts={contacts} />}\n      </div>\n    </section>\n  );\n}\n"],"names":["ListItem","styled","ContactListItem","id","name","number","useDeleteContactMutation","deleteContact","isDeleting","isLoading","type","onClick","List","ContactList","filter","contacts","normalizedFilter","toLowerCase","findContacts","contact","includes","map","phone","Label","Filter","handleChange","value","onChange","placeholder","Logo","Spinner","src","logo","alt","Form","ContactForm","useState","setName","setNumber","useAddContactMutation","createContact","isError","e","target","onSubmit","preventDefault","newContact","find","toLocaleLowerCase","toast","autoComplete","pattern","title","required","styles","section","backgroundImage","phoneImage","backgroundSize","backgroundRepeat","backgroundPosition","padding","h1","marginBottom","textAlign","color","fontSize","h2","p","ContactsPage","setFilter","useFetchContactsQuery","undefined","refetchOnMountOrArgChange","data","isFetching","style","length"],"sourceRoot":""}